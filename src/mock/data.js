let mock = {
    "code": 10000,
    "msg": "ok",
    "data": [
        {
            "id": 110,
            "createBy": "1",
            "createDt": 1509455101000,
            "updateBy": "1",
            "updateDt": 1509851724000,
            "rowStatus": 1,
            "cid": null,
            "name": "Icon",
            "nickname": "Icon",
            "code": "exports.cid = '46'\r\nexports.name = 'Icon';\r\nexports.nickname = 'Icon';\r\nexports.type = 'Icon';\r\nexports.template= `<Icon{model}></Icon>`\r\nexports.desc = 'Icon';\r\nexports.allow = [];\r\nexports.model = {\r\n    type:{\r\n      type:'select',\r\n      value:'refresh',\r\n      desc:''\r\n    }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    props:{\r\n      type:context.model.type.value  \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [ \r\n        {\r\n            name:'editable',\r\n            value:'Icon'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit('dragModule/showEditorPanel', e)\r\n      }\r\n    },\r\n  })\r\n}",
            "clazzId": 4,
            "clazzName": "View",
            "sort": -100
        },
        {
            "id": 202,
            "createBy": "1",
            "createDt": 1510221362000,
            "updateBy": "1",
            "updateDt": 1511182376000,
            "rowStatus": 1,
            "cid": null,
            "name": "Table",
            "nickname": "Table",
            "code": "exports.cid = '220'\r\nexports.name = 'Table';\r\nexports.nickname = 'Table';\r\nexports.type = 'Table';\r\nexports.template =\r\n    `<Table{model}></Table>`\r\nexports.desc = 'Content';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    columns: {\r\n        script: true,\r\n        showConfig: false,\r\n          addModel:true,\r\n        exclude: true,\r\n        type: 'json',\r\n        value: [{\r\n                title: 'Name',\r\n                key: 'name'\r\n            },\r\n            {\r\n                title: 'Age',\r\n                key: 'age'\r\n            },\r\n            {\r\n                title: 'Address',\r\n                key: 'address'\r\n            }\r\n        ],\r\n        desc: ''\r\n    },\r\n    data: {\r\n        script: true,\r\n        showConfig: false,\r\n        addModel:true,\r\n        exclude: true,\r\n        type: 'json',\r\n        value: [{\r\n                name: 'John Brown',\r\n                age: 18,\r\n                address: 'New York No. 1 Lake Park',\r\n                date: '2016-10-03'\r\n            },\r\n            {\r\n                name: 'Jim Green',\r\n                age: 24,\r\n                address: 'London No. 1 Lake Park',\r\n                date: '2016-10-01'\r\n            },\r\n            {\r\n                name: 'Joe Black',\r\n                age: 30,\r\n                address: 'Sydney No. 1 Lake Park',\r\n                date: '2016-10-02'\r\n            },\r\n            {\r\n                name: 'Jon Snow',\r\n                age: 26,\r\n                address: 'Ottawa No. 2 Lake Park',\r\n                date: '2016-10-04'\r\n            }\r\n        ],\r\n        desc: ''\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        props: {\r\n\r\n            columns: context.model.columns.value,\r\n            data: context.model.data.value\r\n\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            'click': function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Table'\r\n        }]\r\n    })\r\n}",
            "clazzId": 4,
            "clazzName": "View",
            "sort": -100
        },
        {
            "id": 214,
            "createBy": "1",
            "createDt": 1511099055000,
            "updateBy": "1",
            "updateDt": 1511317722000,
            "rowStatus": 1,
            "cid": null,
            "name": "Input",
            "nickname": "Input",
            "code": "exports.cid = '5'\r\nexports.name = 'Input';\r\nexports.nickname = 'Input';\r\nexports.type = 'Input';\r\nexports.template =\r\n    `\r\n   \r\n        <Input {model}>\r\n        </Input>\r\n  \r\n`\r\nexports.desc = '输入框';\r\nexports.allow = null;\r\n\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelInput',\r\n        type: 'text',\r\n        desc: ''\r\n    },\r\n    type: {\r\n        type: 'select',\r\n        items:[\r\n        {\r\n            label:'text',\r\n            value:'text'\r\n        },\r\n         {\r\n            label:'password',\r\n            value:'password'\r\n        },\r\n         {\r\n            label:'textarea',\r\n            value:'textarea'\r\n        }\r\n        ],\r\n        value: 'text',\r\n        desc: 'value'\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n\r\n\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n        props: {\r\n            type: context.model.type.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Input'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 215,
            "createBy": "1",
            "createDt": 1511099377000,
            "updateBy": "1",
            "updateDt": 1511406216000,
            "rowStatus": 1,
            "cid": null,
            "name": "FormItem",
            "nickname": "FormItem",
            "code": "exports.cid = '4'\r\nexports.name = 'FormItem';\r\nexports.nickname = 'FormItem';\r\nexports.type = 'FormItem';\r\nexports.template = `<FormItem{model}>{slot}</FormItem>`\r\nexports.desc = 'FormItem';\r\nexports.allowPlace = [2, 3];\r\nexports.allow = [5, 6, 7, 8, 9, 10, 11, 12];\r\nexports.model = {\r\n    label: {\r\n        type: 'text',\r\n        value: '',\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: '',\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\n\r\nexports.script = function(eventCenter, appStore) {\r\n    const context = this\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    console.log(this.children)\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            'label': context.model.label.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n                name: 'droppable'\r\n            },\r\n            {\r\n                name: 'editable',\r\n                value: 'FormItem'\r\n            }\r\n        ],\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 216,
            "createBy": "1",
            "createDt": 1511099775000,
            "updateBy": "1",
            "updateDt": 1511104604000,
            "rowStatus": 1,
            "cid": null,
            "name": "Select",
            "nickname": "Select",
            "code": "exports.cid = '6'\r\nexports.name = 'Select';\r\nexports.nickname = 'Select';\r\nexports.type = 'Select';\r\nexports.template =\r\n    `\r\n   \r\n        <Select {model}>\r\n            <Option v-for=\"item in selectItems\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n        </Select>\r\n   \r\n`\r\nexports.desc = '下拉框';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelSelect',\r\n        type: 'text',\r\n        desc: ''\r\n    },\r\n    selectItems: {\r\n        script: true,\r\n        showConfig: false,\r\n        exclude: true,\r\n        dontSave: true,\r\n        type: 'json',\r\n        value: [{\r\n            label: '北京市',\r\n            value: '1'\r\n        }, {\r\n            label: '上海市',\r\n            value: '2'\r\n        }, {\r\n            label: '苏州市',\r\n            value: '3'\r\n        }],\r\n        desc: ''\r\n    },\r\n\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: 'formItem' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Select'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 217,
            "createBy": "1",
            "createDt": 1511099819000,
            "updateBy": "1",
            "updateDt": 1511104597000,
            "rowStatus": 1,
            "cid": null,
            "name": "Radio",
            "nickname": "Radio",
            "code": "exports.cid = '7'\r\nexports.name = 'Radio';\r\nexports.nickname = 'Radio';\r\nexports.type = 'Radio';\r\nexports.template =\r\n    `\r\n       <RadioGroup {model}>\r\n        <Radio v-for='item in radioItems' :label=\"item.label\" :value='item.value' :key='item.value'>\r\n        </Radio>\r\n       </RadioGroup>\r\n`\r\nexports.desc = 'Radio';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelRadio',\r\n        type: 'text',\r\n        desc: ''\r\n    },\r\n    radioItems: {\r\n        script: true,\r\n        showConfig: false,\r\n        exclude: true,\r\n        dontSave: true,\r\n        type: 'json',\r\n        value: [{\r\n            label: '北京市',\r\n            value: '1'\r\n        }, {\r\n            label: '上海市',\r\n            value: '2'\r\n        }, {\r\n            label: '苏州市',\r\n            value: '3'\r\n        }],\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: {},\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: 'formItem' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Radio'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 218,
            "createBy": "1",
            "createDt": 1511102609000,
            "updateBy": "1",
            "updateDt": 1511104591000,
            "rowStatus": 1,
            "cid": null,
            "name": "Checkbox",
            "nickname": "Checkbox",
            "code": "exports.cid = '8'\r\nexports.name = 'Checkbox';\r\nexports.nickname = 'Checkbox';\r\nexports.type = 'Checkbox';\r\nexports.template =\r\n    `\r\n       <CheckboxGroup {model}>\r\n        <Checkbox v-for='item in checkboxItems' :label=\"item.label\" :value='item.value' :key='item.value'>\r\n        </Checkbox>\r\n       </CheckboxGroup>\r\n`\r\nexports.desc = 'Radio';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelCheckBox',\r\n        type: 'array',\r\n        desc: ''\r\n    },\r\n    checkboxItems: {\r\n        script: true,\r\n        showConfig: false,\r\n        exclude: true,\r\n        dontSave: true,\r\n        type: 'json',\r\n        value: [{\r\n            label: '北京市',\r\n            value: '1'\r\n        }, {\r\n            label: '上海市',\r\n            value: '2'\r\n        }, {\r\n            label: '苏州市',\r\n            value: '3'\r\n        }],\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: 'formItem' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Checkbox'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 219,
            "createBy": "1",
            "createDt": 1511102746000,
            "updateBy": "1",
            "updateDt": 1511104587000,
            "rowStatus": 1,
            "cid": null,
            "name": "Upload",
            "nickname": "Upload",
            "code": "exports.cid = '9'\r\nexports.name = 'Upload';\r\nexports.nickname = 'Upload';\r\nexports.type = 'Button';\r\nexports.template =\r\n    `\r\n        <Upload {model} >\r\n            <Button type=\"ghost\" icon=\"ios-cloud-upload-outline\">Upload files</Button>\r\n        </Upload>\r\n        \r\n\r\n`\r\nexports.desc = 'upload';\r\nexports.allow = null;\r\n\r\nexports.model = {\r\n    action: {\r\n        type: 'text',\r\n        value: '//jsonplaceholder.typicode.com/posts/'\r\n    },\r\n\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n        props: {\r\n\r\n        },\r\n        domProps: {\r\n            controlConfig: this,\r\n            innerHTML: 'Upload files'\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Upload'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 220,
            "createBy": "1",
            "createDt": 1511102775000,
            "updateBy": "1",
            "updateDt": 1511104584000,
            "rowStatus": 1,
            "cid": null,
            "name": "DatePicker",
            "nickname": "DatePicker",
            "code": "exports.cid = '10'\r\nexports.name = 'DatePicker';\r\nexports.nickname = 'DatePicker';\r\nexports.type = 'DatePicker';\r\nexports.template =\r\n    `\r\n \r\n        <DatePicker {model}>\r\n        </DatePicker>\r\n \r\n`\r\nexports.desc = 'date';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelDatePicker',\r\n        type: 'text',\r\n        desc: ''\r\n    },\r\n    type: {\r\n        type: 'text',\r\n        value: 'date',\r\n        desc: ''\r\n    },\r\n    format: {\r\n        type: 'text',\r\n        value: 'yyyy-MM-dd HH:mm:ss',\r\n        desc: ''\r\n    },\r\n\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n        props: {\r\n            type: context.model.type.value,\r\n            format: context.model.format.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'DatePicker'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 221,
            "createBy": "1",
            "createDt": 1511102967000,
            "updateBy": "1",
            "updateDt": 1511104577000,
            "rowStatus": 1,
            "cid": null,
            "name": "TimePicker",
            "nickname": "TimePicker",
            "code": "exports.cid = '11'\r\nexports.name = 'TimePicker';\r\nexports.nickname = 'TimePicker';\r\nexports.type = 'TimePicker';\r\nexports.template =\r\n    `\r\n \r\n        <TimePicker {model}>\r\n        </TimePicker>\r\n \r\n`\r\nexports.desc = 'date';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelTimePicker',\r\n        type: 'text',\r\n        desc: ''\r\n    },\r\n    type: {\r\n        type: 'text',\r\n        value: 'time',\r\n        desc: ''\r\n    },\r\n    format: {\r\n        type: 'text',\r\n        value: 'HH:mm:ss',\r\n        desc: ''\r\n    },\r\n\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n        props: {\r\n            type: context.model.type.value,\r\n            format: context.model.format.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'TimePicker'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 222,
            "createBy": "1",
            "createDt": 1511103034000,
            "updateBy": "1",
            "updateDt": 1511104717000,
            "rowStatus": 1,
            "cid": null,
            "name": "InputNumber",
            "nickname": "InputNumber",
            "code": "exports.cid = '12'\r\nexports.name = 'InputNumber';\r\nexports.nickname = 'InputNumber';\r\nexports.type = 'InputNumber';\r\nexports.template =\r\n    `\r\n  \r\n        <InputNumber {model}>\r\n        </InputNumber>\r\n \r\n`\r\nexports.desc = '数字输入框';\r\nexports.allow = null;\r\n\r\nexports.model = {\r\n    'v-model': {\r\n        showConfig: false,\r\n        script: true,\r\n        vModel: true,\r\n        value: 'modelInput',\r\n        type: 'text',\r\n        desc: ''\r\n    },\r\n\r\n    max: {\r\n        type: 'text',\r\n        value: 10,\r\n        desc: ''\r\n    },\r\n    min: {\r\n        type: 'text',\r\n        value: 0,\r\n        desc: ''\r\n    },\r\n\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n        props: {\r\n            max: context.model.max.value,\r\n            min: context.model.min.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'InputNumber'\r\n        }]\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": -100
        },
        {
            "id": 223,
            "createBy": "1",
            "createDt": 1511105459000,
            "updateBy": "1",
            "updateDt": 1511576451000,
            "rowStatus": 1,
            "cid": null,
            "name": "Page",
            "nickname": "Page",
            "code": "exports.cid = '21'\r\nexports.name = 'Page';\r\nexports.nickname = 'Page';\r\nexports.type = 'Page';\r\nexports.template =\r\n    `<Page{model} ></Page>`\r\nexports.desc = 'Content';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n\r\n    current: {\r\n        type: 'text',\r\n        value: 1,\r\n        desc: ''\r\n    },\r\n    pageSize: {\r\n        type: 'text',\r\n        value: 10,\r\n        desc: ''\r\n    },\r\n    total: {\r\n        type: 'text',\r\n        value: 100,\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n\r\n        },\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            current: context.model.current.value,\r\n            'pageSize': context.model.pageSize.value,\r\n            total: context.model.total.value,\r\n            'show-total': true,\r\n            'show-elevator': true\r\n\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            'click': function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Page'\r\n        }]\r\n    })\r\n}",
            "clazzId": 4,
            "clazzName": "View",
            "sort": -100
        },
        {
            "id": 224,
            "createBy": "1",
            "createDt": 1511141676000,
            "updateBy": "1",
            "updateDt": 1511576448000,
            "rowStatus": 1,
            "cid": null,
            "name": "Span",
            "nickname": "Span",
            "code": "exports.cid = '13'\r\nexports.name = 'P';\r\nexports.nickname = 'P';\r\nexports.type = 'P';\r\nexports.template =\r\n    `\r\n  \r\n        <P {model}>\r\n         {innerHTML}\r\n        </P>\r\n \r\n`\r\nexports.desc = 'P';\r\nexports.allow = null;\r\n\r\nexports.model = {\r\n    text: {\r\n        compileType: 'innerHTML',\r\n        type: 'text',\r\n        value: '',\r\n        desc: 'text'\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: {\r\n            minHeight: '10px'\r\n        },\r\n        desc: 'style'\r\n    }\r\n};\r\n\r\nexports.script = function() {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script()\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n\r\n        domProps: {\r\n            controlConfig: this,\r\n            innerHTML: this.model.text.value\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'P'\r\n        }]\r\n    })\r\n}",
            "clazzId": 4,
            "clazzName": "View",
            "sort": -100
        },
        {
            "id": 41,
            "createBy": "1",
            "createDt": null,
            "updateBy": "1",
            "updateDt": 1511319607000,
            "rowStatus": 1,
            "cid": null,
            "name": "Row",
            "nickname": "Row",
            "code": "exports.cid = '1'\r\nexports.name = 'Row';\r\nexports.nickname = 'Row';\r\nexports.type = 'Row';\r\nexports.template = `<Row{model}>{slot}</Row>`\r\nexports.desc = '栅栏Row';\r\nexports.allow = [2];\r\nexports.model = {\r\n    type: {\r\n        type: 'text',\r\n        value: 'flex',\r\n        desc: ''\r\n    },\r\n    align: {\r\n        type: 'select',\r\n        items: [{\r\n                label: 'top',\r\n                value: 'top'\r\n            },\r\n            {\r\n                label: 'middle',\r\n                value: 'middle'\r\n            },\r\n            {\r\n                label: 'bottom',\r\n                value: 'bottom'\r\n            }\r\n        ],\r\n        value: 'top',\r\n        desc: ''\r\n    },\r\n    justify: {\r\n        type: 'select',\r\n        items: [{\r\n                label: 'start',\r\n                value: 'start'\r\n            },\r\n            {\r\n                label: 'center',\r\n                value: 'center'\r\n            },\r\n            {\r\n                label: 'end',\r\n                value: 'end'\r\n            },\r\n            {\r\n                label: 'space-around',\r\n                value: 'space-around'\r\n            },\r\n            {\r\n                label: 'space-between',\r\n                value: 'space-between'\r\n            }\r\n        ],\r\n        value: 'start',\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: '',\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n    const eventCenter = createElement.eventCenter\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(eventCenter)\r\n    }\r\n\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            type: context.model.type.value,\r\n            align: context.model.align.value,\r\n            justify: context.model.justify.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n\r\n        directives: [{\r\n                name: 'droppable'\r\n            }],\r\n\r\n        nativeOn: {\r\n            click: function(e) {\r\n\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n};",
            "clazzId": 2,
            "clazzName": "Layout",
            "sort": 2
        },
        {
            "id": 21,
            "createBy": "1",
            "createDt": null,
            "updateBy": "1",
            "updateDt": 1511319921000,
            "rowStatus": 1,
            "cid": null,
            "name": "Col",
            "nickname": "Col",
            "code": "exports.cid = '2'\r\nexports.name = 'Col';\r\nexports.nickname = 'Col';\r\nexports.type = 'Col';\r\nexports.template = `<Col{model}>{slot}</Col>`\r\nexports.desc = '栅栏Col';\r\nexports.allow = [];\r\nexports.model = {\r\n    span: {\r\n        type: 'slider',\r\n        value: 12,\r\n        desc: '12,12代表两个50%的栅栏，8,8,8是三个'\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: '',\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\n\r\nexports.script = function(eventCenter, appStore) {\r\n    const context = this\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    console.log(this.children)\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            'span': context.model.span.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n                name: 'droppable'\r\n            },\r\n            {\r\n                name: 'editable',\r\n                value: 'Col'\r\n            }\r\n        ],\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n}",
            "clazzId": 2,
            "clazzName": "Layout",
            "sort": 3
        },
        {
            "id": 44,
            "createBy": "1",
            "createDt": null,
            "updateBy": "1",
            "updateDt": 1511141216000,
            "rowStatus": 1,
            "cid": null,
            "name": "Card",
            "nickname": "Card",
            "code": "exports.cid = '15'\r\nexports.name = 'Card';\r\nexports.nickname = 'Card';\r\nexports.type = 'WrapCard';\r\nexports.template = `<Card{model}>{slot}</Card>`\r\nexports.desc = 'Card';\r\nexports.allow = [];\r\nexports.model = {\r\n    showHead: {\r\n        type: 'boolean',\r\n        ignore: true,\r\n        value: false,\r\n        desc: ''\r\n    },\r\n    showExtra: {\r\n        type: 'boolean',\r\n        ignore: true,\r\n        value: false,\r\n        desc: ''\r\n    },\r\n    showBody: {\r\n        type: 'boolean',\r\n        showConfig:false,\r\n        ignore: true,\r\n        value: true,\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: '',\r\n        desc: 'value'\r\n    },\r\n    disHover: {\r\n        type: 'boolean',\r\n        value: false,\r\n        desc: '禁用鼠标悬停显示阴影'\r\n    }\r\n};\r\n\r\nexports.script = function() {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n    const dropTitle = context.children[0]\r\n    const dropExtra = context.children[1]\r\n    const dropBody = context.children[2]\r\n    dropTitle.showSlot = context.model.showHead.value\r\n    dropExtra.showSlot = context.model.showExtra.value\r\n    dropBody.showSlot = context.model.showBody.value\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script()\r\n    }\r\n\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            showHead: context.model.showHead.value,\r\n            showExtra: context.model.showExtra.value,\r\n            disHover: context.model.disHover.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Card'\r\n        }],\r\n        scopedSlots: {\r\n            'title': () => context.model.showHead.value && dropTitle.render(createElement),\r\n            'extra': () => context.model.showExtra.value && dropExtra.render(createElement),\r\n            'body': () => dropBody.render(createElement)\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n};",
            "clazzId": 2,
            "clazzName": "Layout",
            "sort": 3
        },
        {
            "id": 22,
            "createBy": "1",
            "createDt": null,
            "updateBy": "1",
            "updateDt": 1511406231000,
            "rowStatus": 1,
            "cid": null,
            "name": "Form",
            "nickname": "Form",
            "code": "exports.cid = '3'\r\nexports.name = 'Form';\r\nexports.nickname = 'Form';\r\nexports.type = 'Form';\r\nexports.template = `<Form{model}>{slot}</Form>`;\r\nexports.desc = '表单';\r\nexports.allow = [1, 4];\r\nexports.model = {\r\n\r\n    labelWidth: {\r\n        type: 'text',\r\n        value: 0,\r\n        desc: '表单label宽度'\r\n    },\r\n    inline: {\r\n        type: 'boolean',\r\n        value: false,\r\n        desc: '行内'\r\n    },\r\n    style: {\r\n        type: 'json',\r\n        value: {},\r\n        desc: 'value'\r\n    },\r\n\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n    eventCenter.bind('submit-form', (param) => {\r\n\r\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\r\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, 'formItem')\r\n        let vm = eventCenter.createElement.vm\r\n        console.log(params)\r\n        let pass = true\r\n\r\n        refs.forEach(ref => {\r\n            ref.$children[0].validate(function(valid) {\r\n                if (!valid) pass = false\r\n            })\r\n        })\r\n\r\n        if (!pass) {\r\n            return void vm.$Message.warning('please pass validation')\r\n        }\r\n\r\n        params.pageSize = param.pageSize\r\n        params.pageNum = param.pageNum\r\n        params.url = this.model.url.value\r\n        eventCenter.trigger('refresh-table', {\r\n            data: params\r\n        })\r\n    })\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            inline: context.model.inline.value,\r\n            'label-width': context.model.labelWidth.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n                name: 'droppable'\r\n            },\r\n            {\r\n                name: 'editable',\r\n                value: 'Form'\r\n            }\r\n        ],\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        }\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": 5
        },
        {
            "id": 42,
            "createBy": "1",
            "createDt": null,
            "updateBy": null,
            "updateDt": null,
            "rowStatus": 1,
            "cid": null,
            "name": "Tabs",
            "nickname": "Tabs",
            "code": "exports.cid = '12'\r\nexports.name = 'Tabs';\r\nexports.nickname = 'Tabs';\r\nexports.type = 'Tabs';\r\nexports.template=\r\n`<Tabs{model}>{slot}</Tabs>`\r\nexports.desc = 'Tabs';\r\nexports.allow = [13];\r\nexports.model = {\r\n  style: {\r\n    type: 'json',\r\n    value: '',\r\n    desc: 'value'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n   \r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props: {\r\n      \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [\r\n        {\r\n          name:'droppable'  \r\n        },\r\n        {\r\n            name:'editable',\r\n            value:'Tabs'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit('dragModule/showEditorPanel', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement)\r\n  }))\r\n};\r\n\r\n",
            "clazzId": 2,
            "clazzName": "Layout",
            "sort": 11
        },
        {
            "id": 43,
            "createBy": "1",
            "createDt": null,
            "updateBy": null,
            "updateDt": null,
            "rowStatus": 1,
            "cid": null,
            "name": "TabPane",
            "nickname": "TabPane",
            "code": "exports.cid = '13'\r\nexports.name = 'TabPane';\r\nexports.nickname = 'TabPane';\r\nexports.type = 'TabPane';\r\nexports.template=\r\n`<TabPane{model}>{slot}</TabPane>`\r\nexports.desc = 'TabPane';\r\nexports.allow = [];\r\nexports.model = {\r\n  label: {\r\n    type: 'text',\r\n    value: 'tab',\r\n    desc: 'label'\r\n  },\r\n  name: {\r\n    type: 'text',\r\n    value: '',\r\n    desc: 'name'\r\n  },\r\n  style: {\r\n    type: 'json',\r\n    value: '',\r\n    desc: 'value'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n \r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props: {\r\n      'name': context.model.name.value,\r\n      'label': context.model.label.value\r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [\r\n        {\r\n            name:'droppable'\r\n        },\r\n        {\r\n            name:'editable',\r\n            value:'TabPane'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit('dragModule/showEditorPanel', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement)\r\n  }))\r\n};\r\n",
            "clazzId": 2,
            "clazzName": "Layout",
            "sort": 12
        },
        {
            "id": 26,
            "createBy": "1",
            "createDt": null,
            "updateBy": "1",
            "updateDt": 1511147891000,
            "rowStatus": 1,
            "cid": null,
            "name": "DropPanel",
            "nickname": "DropPanel",
            "code": "exports.cid = '100'\r\nexports.name = 'DropPanel';\r\nexports.nickname = 'DropPanel';\r\nexports.type = 'Div';\r\nexports.template = `\r\n<div {model} {slotName}>{slot}</div>\r\n`\r\nexports.desc = '拖拽安置面板';\r\nexports.allow = [];\r\n\r\nexports.model = {\r\n    style: {\r\n        type: 'json',\r\n        value: {},\r\n        desc: 'value'\r\n    }\r\n};\r\n\r\nexports.script = function() {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n\r\n    }\r\n\r\n\r\n    return createElement('Div', {\r\n        style: context.model.style.value,\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n            name: 'droppable'\r\n        }],\r\n        'class': {\r\n            'soul-drop-panel': true\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n\r\n        return child.render(createElement)\r\n    }))\r\n}",
            "clazzId": 6,
            "clazzName": "Unclassified ",
            "sort": 15
        },
        {
            "id": 25,
            "createBy": "1",
            "createDt": null,
            "updateBy": "1",
            "updateDt": 1511406381000,
            "rowStatus": 1,
            "cid": null,
            "name": "Button",
            "nickname": "Button",
            "code": "exports.cid = '6'\r\nexports.name = 'Button';\r\nexports.nickname = 'Button';\r\nexports.type = 'Button';\r\nexports.template = `\r\n<Button{model}>{innerHTML}</Button>\r\n`\r\nexports.desc = '按钮';\r\nexports.allow = null;\r\nexports.model = {\r\n    name: {\r\n        type: 'text',\r\n        compileType: 'innerHTML',\r\n        value: '提交',\r\n        desc: ''\r\n    },\r\n    style: {\r\n        type: 'text',\r\n        value: '',\r\n        desc: 'value'\r\n    },\r\n    type: {\r\n        type: 'select',\r\n        items: [{\r\n                label: 'primary',\r\n                value: 'primary'\r\n            },\r\n            {\r\n                label: 'ghost',\r\n                value: 'ghost'\r\n            },\r\n            {\r\n                label: 'dashed',\r\n                value: 'dashed'\r\n            },\r\n            {\r\n                label: 'text',\r\n                value: 'text'\r\n            },\r\n            {\r\n                label: 'info',\r\n                value: 'info'\r\n            },\r\n            {\r\n                label: 'success',\r\n                value: 'success'\r\n            },\r\n            {\r\n                label: 'warning',\r\n                value: 'warning'\r\n            },\r\n            {\r\n                label: 'error',\r\n                value: 'error'\r\n            }\r\n        ],\r\n        value:'primary',\r\n        desc: 'type of button'\r\n    }\r\n};\r\n\r\nexports.script = function() {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            type: context.model.type.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this,\r\n            innerHTML: context.model.name.value\r\n        },\r\n        directives: [{\r\n            name: 'editable',\r\n            value: 'Button'\r\n        }],\r\n        on: {\r\n            click(e) {\r\n\r\n                createElement.eventCenter.trigger('submit-form', {\r\n                    from: context.uid,\r\n                    data: ''\r\n                })\r\n            }\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit('dragModule/showEditorPanel', e)\r\n            }\r\n        },\r\n    })\r\n}",
            "clazzId": 3,
            "clazzName": "Form",
            "sort": 16
        }
    ]
}
export default mock;